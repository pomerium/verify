name: Docker

on:
  pull_request: {}
  push:
    branches:
      - main

jobs:
  publish:
    runs-on: ubuntu-22.04
    outputs:
      meta_json: ${{ steps.meta.outputs.json }}

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: Docker Meta
        id: meta
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f
        with:
          flavor: |
            latest=true
          images: |
            gcr.io/pomerium-registry/verify
            pomerium/verify
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha

      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435

      - name: gcloud authenticate
        if: ${{ github.event_name != 'pull_request' }}
        uses: google-github-actions/auth@140bb5113ffb6b65a7e9b937a81fa96cf5064462
        with:
          project_id: ${{ secrets.GCP_PRODUCTION_PROJECT_ID }}
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: gcloud sdk
        if: ${{ github.event_name != 'pull_request' }}
        uses: google-github-actions/setup-gcloud@6a7c903a70c8625ed6700fa299f5ddb4ca6022e9

      - name: gcloud docker setup
        if: ${{ github.event_name != 'pull_request' }}
        run: gcloud auth configure-docker

      - name: Login to DockerHub
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: build and push
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' }}
    needs: publish
    steps:
      - name: checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: gcloud authenticate
        uses: google-github-actions/auth@140bb5113ffb6b65a7e9b937a81fa96cf5064462
        with:
          project_id: ${{ secrets.GCP_PRODUCTION_PROJECT_ID }}
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: gcloud sdk
        uses: google-github-actions/setup-gcloud@6a7c903a70c8625ed6700fa299f5ddb4ca6022e9

      - name: deploy to cloud run
        uses: google-github-actions/deploy-cloudrun@147732842f8a61ce9bd3b3f8e9f6597fe991ad65
        if: ${{ github.event_name != 'pull_request' }}
        with:
          image: ${{ fromJSON(needs.publish.outputs.meta_json).tags[0] }}
          service: verify
          flags: "--allow-unauthenticated"
