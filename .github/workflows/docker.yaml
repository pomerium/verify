name: Docker

on:
  pull_request: {}
  push:
    branches:
      - main

jobs:
  publish:
    runs-on: ubuntu-latest
    outputs:
      meta_json: ${{ steps.meta.outputs.json }}

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: Docker Meta
        id: meta
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81
        with:
          flavor: |
            latest=true
          images: |
            gcr.io/pomerium-registry/verify
            pomerium/verify
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha

      - name: Set up QEMU
        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@c47758b77c9736f4b2ef4073d4d51994fabfe349

      - name: gcloud authenticate
        if: ${{ github.event_name != 'pull_request' }}
        uses: google-github-actions/auth@6fc4af4b145ae7821d527454aa9bd537d1f2dc5f
        with:
          project_id: ${{ secrets.GCP_PRODUCTION_PROJECT_ID }}
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: gcloud sdk
        if: ${{ github.event_name != 'pull_request' }}
        uses: google-github-actions/setup-gcloud@6189d56e4096ee891640bb02ac264be376592d6a

      - name: gcloud docker setup
        if: ${{ github.event_name != 'pull_request' }}
        run: gcloud auth configure-docker

      - name: Login to DockerHub
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: build and push
        uses: docker/build-push-action@4f58ea79222b3b9dc2c8bbdd6debcef730109a75
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' }}
    needs: publish
    steps:
      - name: checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: gcloud authenticate
        uses: google-github-actions/auth@6fc4af4b145ae7821d527454aa9bd537d1f2dc5f
        with:
          project_id: ${{ secrets.GCP_PRODUCTION_PROJECT_ID }}
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: gcloud sdk
        uses: google-github-actions/setup-gcloud@6189d56e4096ee891640bb02ac264be376592d6a

      - name: deploy to cloud run
        uses: google-github-actions/deploy-cloudrun@1ec29da1351112c7904fb60454a55e3e1021a51c
        if: ${{ github.event_name != 'pull_request' }}
        with:
          image: ${{ fromJSON(needs.publish.outputs.meta_json).tags[0] }}
          service: verify
          flags: "--allow-unauthenticated"
