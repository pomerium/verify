name: Docker

on:
  pull_request: {}
  push:
    branches:
      - main

jobs:
  publish:
    runs-on: ubuntu-latest
    outputs:
      meta_json: ${{ steps.meta.outputs.json }}

    steps:
      - name: Checkout
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608

      - name: Docker Meta
        id: meta
        uses: docker/metadata-action@e6428a5c4e294a61438ed7f43155db912025b6b3
        with:
          flavor: |
            latest=true
          images: |
            gcr.io/pomerium-registry/verify
            pomerium/verify
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha

      - name: Set up QEMU
        uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226

      - name: gcloud authenticate
        if: ${{ github.event_name != 'pull_request' }}
        uses: google-github-actions/auth@35b0e87d162680511bf346c299f71c9c5c379033
        with:
          project_id: ${{ secrets.GCP_PRODUCTION_PROJECT_ID }}
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: gcloud sdk
        if: ${{ github.event_name != 'pull_request' }}
        uses: google-github-actions/setup-gcloud@e30db14379863a8c79331b04a9969f4c1e225e0b

      - name: gcloud docker setup
        if: ${{ github.event_name != 'pull_request' }}
        run: gcloud auth configure-docker

      - name: Login to DockerHub
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: build and push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' }}
    needs: publish
    steps:
      - name: checkout
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608

      - name: gcloud authenticate
        uses: google-github-actions/auth@35b0e87d162680511bf346c299f71c9c5c379033
        with:
          project_id: ${{ secrets.GCP_PRODUCTION_PROJECT_ID }}
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: gcloud sdk
        uses: google-github-actions/setup-gcloud@e30db14379863a8c79331b04a9969f4c1e225e0b

      - name: deploy to cloud run
        uses: google-github-actions/deploy-cloudrun@e62f655d5754bec48078a72edc015367b01ee97b
        if: ${{ github.event_name != 'pull_request' }}
        with:
          image: ${{ fromJSON(needs.publish.outputs.meta_json).tags[0] }}
          service: verify
          flags: "--allow-unauthenticated"
